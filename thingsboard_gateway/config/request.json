{
  "host": "https://systemet.glavaenergycenter.se:444",
  "SSLVerify": false,
  "security": {
    "type": "anonymous"
  },
  "get_batch_of_data": true,
  "batch_size": 2,
  "mapping": [
    {
      "url": "/MetrumWebapi/api/longtimedata?dataTypeId=3&mpointId=1",
      "httpMethod": "GET",
      "httpHeaders": {
      "ACCEPT": "application/json"
      },
      "allowRedirects": true,
      "timeout": 3,
      "scanPeriod": 6,
      "converter": {
        "type": "json",
        "glava": true,
        "first_part_of_name": "${mPoint.name}",
        "second_part_of_name": "${dataType.name}",
        "deviceNameJsonExpression": "device name",
        "deviceTypeJsonExpression": "default",
        "attributes": [
          {
            "key": "sensorId",
            "type": "double",
            "value": "${mPoint.id}"
          }
        ],
        "telemetry": [
          {
            "key": "Wind direction",
            "type": "double",
            "value": "${channels[0].values}"
          },
          {
            "key": "Precipitation",
            "type": "double",
            "value": "${channels[1].values}"
          }
        ]
      }
    },
    {
      "url": "/MetrumWebapi/api/longtimedata?dataTypeId=3&mpointId=2",
      "httpMethod": "GET",
      "httpHeaders": {
      "ACCEPT": "application/json"
      },
      "allowRedirects": true,
      "timeout": 3,
      "scanPeriod": 6,
      "converter": {
        "type": "json",
        "glava": true,
        "first_part_of_name": "${mPoint.name}",
        "second_part_of_name": "${dataType.name}",
        "deviceNameJsonExpression": "device name",
        "deviceTypeJsonExpression": "default",
        "attributes": [
          {
            "key": "sensorId",
            "type": "double",
            "value": "${mPoint.id}"
          }
        ],
        "telemetry": [
          {
            "key": "Temperature",
            "type": "double",
            "value": "${channels[0].values}"
          },
          {
            "key": "Humidity",
            "type": "double",
            "value": "${channels[1].values}"
          },
          {
            "key": "Barometric pressure",
            "type": "double",
            "value": "${channels[2].values}"
          },
          {
            "key": "Wind speed",
            "type": "double",
            "value": "${channels[3].values}"
          }
        ]
      }
    },
    {
      "url": "/MetrumWebapi/api/longtimedata?dataTypeId=3&mpointId=3",
      "httpMethod": "GET",
      "httpHeaders": {
      "ACCEPT": "application/json"
      },
      "allowRedirects": true,
      "timeout": 3,
      "scanPeriod": 6,
      "converter": {
        "type": "json",
        "glava": true,
        "first_part_of_name": "${mPoint.name}",
        "second_part_of_name": "${dataType.name}",
        "deviceNameJsonExpression": "device name",
        "deviceTypeJsonExpression": "default",
        "attributes": [
          {
            "key": "sensorId",
            "type": "double",
            "value": "${mPoint.id}"
          }
        ],
        "telemetry": [
          {
            "key": "Global radiation",
            "type": "double",
            "value": "${channels[0].values}"
          },
          {
            "key": "Radiation 40 degrees",
            "type": "double",
            "value": "${channels[1].values}"
          },
          {
            "key": "Radiation 30 degrees",
            "type": "double",
            "value": "${channels[2].values}"
          },
          {
            "key": "Indirect Radiation",
            "type": "double",
            "value": "${channels[3].values}"
          }
        ]
      }
    },
    {
      "url": "/MetrumWebapi/api/longtimedata?dataTypeId=3&mpointId=4",
      "httpMethod": "GET",
      "httpHeaders": {
      "ACCEPT": "application/json"
      },
      "allowRedirects": true,
      "timeout": 3,
      "scanPeriod": 6,
      "converter": {
        "type": "json",
        "glava": true,
        "first_part_of_name": "${mPoint.name}",
        "second_part_of_name": "${dataType.name}",
        "deviceNameJsonExpression": "device name",
        "deviceTypeJsonExpression": "default",
        "attributes": [
          {
            "key": "sensorId",
            "type": "double",
            "value": "${mPoint.id}"
          }
        ],
        "telemetry": [
          {
            "key": "Direct radiation",
            "type": "double",
            "value": "${channels[0].values}"
          },
          {
            "key": "Tracker temperature",
            "type": "double",
            "value": "${channels[1].values}"
          },
          {
            "key": "Radiation 90 degrees",
            "type": "double",
            "value": "${channels[2].values}"
          },
          {
            "key": "Radiation ground reflection",
            "type": "double",
            "value": "${channels[3].values}"
          }
        ]
      }
    }
  ],
  "attributeUpdates": [
      {
        "httpMethod": "POST",
        "httpHeaders": {
          "CONTENT-TYPE": "application/json"
        },
        "timeout": 0.5,
        "tries": 3,
        "allowRedirects": true,
        "deviceNameFilter": "SD.*",
        "attributeFilter": "send_data",
        "requestUrlExpression": "sensor/${deviceName}/${attributeKey}",
        "valueExpression": "{\"${attributeKey}\":\"${attributeValue}\"}"
      }
  ],
  "serverSideRpc": [
    {
      "deviceNameFilter": ".*",
      "methodFilter": "echo",
      "requestUrlExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
      "responseTimeout": 1,
      "httpMethod": "GET",
      "valueExpression": "${params}",
      "timeout": 0.5,
      "tries": 3,
      "httpHeaders": {
        "Content-Type": "application/json"
      }
    },
    {
      "deviceNameFilter": ".*",
      "methodFilter": "no-reply",
      "requestUrlExpression": "sensor/${deviceName}/request/${methodName}/${requestId}",
      "httpMethod": "POST",
      "valueExpression": "${params}",
      "httpHeaders": {
        "Content-Type": "application/json"
      }
    }
  ]
}
